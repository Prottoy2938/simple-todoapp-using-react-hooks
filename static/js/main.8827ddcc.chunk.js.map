{"version":3,"sources":["Hooks/useTodoState.js","Hooks/useInputState.js","EditTodoForm.js","Hooks/useToggle.js","Todo.js","TodoList.js","TodoForm.js","TodoApp.js","App.js","serviceWorker.js","index.js"],"names":["initialTodos","useState","todos","settodos","addTodo","newTodoText","id","uuid","task","completed","removeTodo","todoId","updateTodos","filter","todo","toggleTodo","map","editTodo","newTask","initialState","value","setvalue","e","target","EditTodoForm","toggleEditForm","useInputState","handleChange","reset","onSubmit","preventDefault","style","marginLeft","width","TextField","margin","onChange","fullWidth","autoFocus","useToggle","state","setstate","Todo","useToggleState","isEditing","toggle","ListItem","height","tabIndex","checked","onClick","ListItemText","textDecoration","ListItemSecondaryAction","IconButton","aria-label","TodoList","length","Paper","List","i","Fragment","key","Divider","TodoForm","padding","label","TodoApp","JSON","parse","window","localStorage","getItem","useTodoState","useEffect","setItem","stringify","console","log","backgroundColor","elevation","AppBar","position","Toolbar","Typography","variant","color","Grid","container","justify","marginTop","item","xs","md","lg","App","className","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8827ddcc.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport uuid from \"uuid/v4\";\r\n\r\nexport default initialTodos => {\r\n  const [todos, settodos] = useState(initialTodos);\r\n  const addTodo = newTodoText => {\r\n    settodos([...todos, { id: uuid(), task: newTodoText, completed: false }]);\r\n  };\r\n\r\n  const removeTodo = todoId => {\r\n    const updateTodos = todos.filter(todo => todo.id !== todoId);\r\n    settodos(updateTodos);\r\n  };\r\n\r\n  const toggleTodo = todoId => {\r\n    const updateTodos = todos.map(todo =>\r\n      todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\r\n    );\r\n    settodos(updateTodos);\r\n  };\r\n  const editTodo = (todoId, newTask) => {\r\n    const updateTodos = todos.map(todo =>\r\n      todo.id === todoId ? { ...todo, task: newTask } : todo\r\n    );\r\n    settodos(updateTodos);\r\n  };\r\n\r\n  return {\r\n    todos,\r\n    addTodo,\r\n    removeTodo,\r\n    toggleTodo,\r\n    editTodo\r\n  };\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport default initialState => {\r\n  const [value, setvalue] = useState(initialState);\r\n\r\n  const handleChange = e => {\r\n    setvalue(e.target.value);\r\n  };\r\n  const reset = () => {\r\n    setvalue(\"\");\r\n  };\r\n  return [value, handleChange, reset];\r\n};\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport useInputState from \"./Hooks/useInputState\";\r\n\r\nfunction EditTodoForm({ editTodo, id, task, toggleEditForm }) {\r\n  const [value, handleChange, reset] = useInputState(task);\r\n  return (\r\n    <form\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        editTodo(id, value);\r\n        reset();\r\n        toggleEditForm();\r\n      }}\r\n      style={{ marginLeft: \"1rem\", width: \"70%\" }}\r\n    >\r\n      <TextField\r\n        margin=\"normal\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        autoFocus\r\n      />\r\n    </form>\r\n  );\r\n}\r\nexport default EditTodoForm;\r\n","import { useState } from \"react\";\r\nfunction useToggle(initialState = false) {\r\n  const [state, setstate] = useState(initialState);\r\n  const toggle = () => {\r\n    setstate(!state);\r\n  };\r\n  return [state, toggle];\r\n}\r\nexport default useToggle;\r\n","import React from \"react\";\r\nimport EditTodoForm from \"./EditTodoForm\";\r\nimport useToggleState from \"./Hooks/useToggle\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {\r\n  ListItemText,\r\n  IconButton,\r\n  ListItemSecondaryAction\r\n} from \"@material-ui/core\";\r\nimport CheckBox from \"@material-ui/core/Checkbox\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nfunction Todo({ id, task, completed, removeTodo, toggleTodo, editTodo }) {\r\n  const [isEditing, toggle] = useToggleState(false);\r\n  return (\r\n    <ListItem style={{ height: \"64px\" }}>\r\n      {isEditing ? (\r\n        <EditTodoForm\r\n          id={id}\r\n          editTodo={editTodo}\r\n          task={task}\r\n          toggleEditForm={toggle}\r\n        />\r\n      ) : (\r\n        <>\r\n          <CheckBox\r\n            tabIndex={-1}\r\n            checked={completed}\r\n            onClick={() => toggleTodo(id)}\r\n          />\r\n          <ListItemText style={{ textDecoration: completed && \"line-through\" }}>\r\n            {task}\r\n          </ListItemText>\r\n          <ListItemSecondaryAction>\r\n            <IconButton aria-label=\"Delete\" onClick={() => removeTodo(id)}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n            <IconButton aria-label=\"Edit\" onClick={toggle}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </>\r\n      )}\r\n    </ListItem>\r\n  );\r\n}\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nfunction TodoList({ todos, removeTodo, toggleTodo, editTodo }) {\r\n  if (todos.length)\r\n    return (\r\n      <Paper>\r\n        <List>\r\n          {todos.map((todo, i) => (\r\n            <React.Fragment key={i}>\r\n              <Todo\r\n                {...todo}\r\n                removeTodo={removeTodo}\r\n                key={todo.id}\r\n                toggleTodo={toggleTodo}\r\n                editTodo={editTodo}\r\n              />\r\n              {i < todos.length - 1 && <Divider />}\r\n            </React.Fragment>\r\n          ))}\r\n        </List>\r\n      </Paper>\r\n    );\r\n  return null;\r\n}\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport useInputState from \"./Hooks/useInputState\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { TextField } from \"@material-ui/core\";\r\nfunction TodoForm({ addTodo }) {\r\n  const [value, handleChange, reset] = useInputState(\"\");\r\n  return (\r\n    <Paper style={{ margin: \"1rem 0\", padding: \"0 1rem\" }}>\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addTodo(value);\r\n          reset();\r\n        }}\r\n      >\r\n        <TextField\r\n          value={value}\r\n          onChange={handleChange}\r\n          margin=\"normal\"\r\n          label=\"Add new Todo\"\r\n          fullWidth\r\n        />\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\nexport default TodoForm;\r\n","import React, { useEffect } from \"react\";\r\nimport useTodoState from \"./Hooks/useTodoState\";\r\nimport TodoList from \"./TodoList\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nfunction TodoApp() {\r\n  const initialTodos = JSON.parse(window.localStorage.getItem(\"todos\") || \"[]\");\r\n  const { todos, addTodo, removeTodo, toggleTodo, editTodo } = useTodoState(\r\n    initialTodos\r\n  );\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n  console.log(\r\n    \"Todo List favicon icon by Icons8\",\r\n    \"https://icons8.com/icons/set/todo-list--v2\"\r\n  );\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        padding: 0,\r\n        margin: 0,\r\n        height: \"100vh\",\r\n        backgroundColor: \"white\"\r\n      }}\r\n      elevation={0}\r\n    >\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ backgroundColor: \"rgba(3, 244, 252,0.7)\", height: \"64px\" }}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" style={{ color: \"black\" }}>\r\n            Simple TodoApp with Hooks\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Grid container justify=\"center\" style={{ marginTop: \"1rem\" }}>\r\n        <Grid item xs={11} md={8} lg={4}>\r\n          <TodoForm addTodo={addTodo} />\r\n          <TodoList\r\n            editTodo={editTodo}\r\n            todos={todos}\r\n            removeTodo={removeTodo}\r\n            toggleTodo={toggleTodo}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\nexport default TodoApp;\r\n","import React from \"react\";\nimport TodoApp from \"./TodoApp\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoApp />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}